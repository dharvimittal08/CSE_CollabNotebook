{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Lab Ass1_Code_Dharvi Mittal.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [

      ],
      "metadata": {
        "id": "grBI0GVRKU9R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9AzwtpxLzUUV"
      },
      "outputs": [],
      "source": [
        "#Dharvi Mittal\n",
        "#E20CSE018_EB07\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy import stats"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 1,2\n",
        "#From UCI machine learning repository,the wine-quality dataset red.\n",
        "#Read the dataset in the form of a NumPy matrix and store it in a variable named XY.\n",
        "XY=np.loadtxt(\"/content/drive/MyDrive/Colab Notebooks/winequality-red.csv\",delimiter=\";\",skiprows=1)\n",
        "XY"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ERhBlL2o2lzi",
        "outputId": "a2fd08b3-1bce-41e6-bc6a-83acb50377e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 7.4  ,  0.7  ,  0.   , ...,  0.56 ,  9.4  ,  5.   ],\n",
              "       [ 7.8  ,  0.88 ,  0.   , ...,  0.68 ,  9.8  ,  5.   ],\n",
              "       [ 7.8  ,  0.76 ,  0.04 , ...,  0.65 ,  9.8  ,  5.   ],\n",
              "       ...,\n",
              "       [ 6.3  ,  0.51 ,  0.13 , ...,  0.75 , 11.   ,  6.   ],\n",
              "       [ 5.9  ,  0.645,  0.12 , ...,  0.71 , 10.2  ,  5.   ],\n",
              "       [ 6.   ,  0.31 ,  0.47 , ...,  0.66 , 11.   ,  6.   ]])"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(i)\n",
        "#Print the shape of matrix XY\n",
        "XY.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GsEkERYt75mp",
        "outputId": "0fe08d17-8b27-469a-b0f5-7456d8138485"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1599, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(a)\n",
        "Y = XY[:,-1]\n",
        "Y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z6_-jlff8RaJ",
        "outputId": "ef535376-34d7-4de5-8d3d-44ced880207e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([5., 5., 5., ..., 6., 5., 6.])"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "USsdDEHp9BU_",
        "outputId": "f746e4b3-36c1-49b4-c0b2-fe8eb182fb46"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1599,)"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(b)\n",
        "X = XY[:,:-1]\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QXdThdVE9IAz",
        "outputId": "11a670ba-09d0-460e-a5a5-b958ea20f657"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 7.4  ,  0.7  ,  0.   , ...,  3.51 ,  0.56 ,  9.4  ],\n",
              "       [ 7.8  ,  0.88 ,  0.   , ...,  3.2  ,  0.68 ,  9.8  ],\n",
              "       [ 7.8  ,  0.76 ,  0.04 , ...,  3.26 ,  0.65 ,  9.8  ],\n",
              "       ...,\n",
              "       [ 6.3  ,  0.51 ,  0.13 , ...,  3.42 ,  0.75 , 11.   ],\n",
              "       [ 5.9  ,  0.645,  0.12 , ...,  3.57 ,  0.71 , 10.2  ],\n",
              "       [ 6.   ,  0.31 ,  0.47 , ...,  3.39 ,  0.66 , 11.   ]])"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Iu-PFSHz9OiI",
        "outputId": "de8d6b80-a2de-4595-d852-24a1a6321f54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1599, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(c)\n",
        "np.random.shuffle(X)"
      ],
      "metadata": {
        "id": "V-BNAcOS-sT0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DxAyjeQB_SXc",
        "outputId": "a2d2527c-772f-4f0a-d224-5372050f92e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 9.2  ,  0.92 ,  0.24 , ...,  3.48 ,  0.54 ,  9.8  ],\n",
              "       [ 7.1  ,  0.53 ,  0.07 , ...,  3.29 ,  0.66 , 10.8  ],\n",
              "       [ 7.   ,  0.805,  0.   , ...,  3.48 ,  0.56 ,  9.6  ],\n",
              "       ...,\n",
              "       [ 9.9  ,  0.54 ,  0.45 , ...,  3.39 ,  0.62 ,  9.4  ],\n",
              "       [ 6.4  ,  0.57 ,  0.12 , ...,  3.47 ,  0.71 , 11.3  ],\n",
              "       [ 7.5  ,  0.685,  0.07 , ...,  3.38 ,  0.55 , 10.9  ]])"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TVAftcTD-tCi",
        "outputId": "82150e90-f2c5-413a-e3e5-1d6057894288"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 9.2  ,  7.1  ,  7.   , ...,  9.9  ,  6.4  ,  7.5  ],\n",
              "       [ 0.92 ,  0.53 ,  0.805, ...,  0.54 ,  0.57 ,  0.685],\n",
              "       [ 0.24 ,  0.07 ,  0.   , ...,  0.45 ,  0.12 ,  0.07 ],\n",
              "       ...,\n",
              "       [ 3.48 ,  3.29 ,  3.48 , ...,  3.39 ,  3.47 ,  3.38 ],\n",
              "       [ 0.54 ,  0.66 ,  0.56 , ...,  0.62 ,  0.71 ,  0.55 ],\n",
              "       [ 9.8  , 10.8  ,  9.6  , ...,  9.4  , 11.3  , 10.9  ]])"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VVP7k9bzu7YE",
        "outputId": "07977fd2-caf9-4038-8e0e-1b12f02a0004"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1599, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(d)\n",
        "X.min(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3hnee4IWjgE4",
        "outputId": "15579e59-6d59-4dad-db3f-f610390e9a33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([4.6    , 0.12   , 0.     , 0.9    , 0.012  , 1.     , 6.     ,\n",
              "       0.99007, 2.74   , 0.33   , 8.4    ])"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.max(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mjJ4cIHNABGW",
        "outputId": "ff3da162-5617-4ecd-830e-051372e5c2c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 15.9    ,   1.58   ,   1.     ,  15.5    ,   0.611  ,  72.     ,\n",
              "       289.     ,   1.00369,   4.01   ,   2.     ,  14.9    ])"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.min(axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "31vdOLJW_b7D",
        "outputId": "5a3c4f49-fd42-40fe-be2a-f5b34b82310a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.087, 0.07 , 0.   , ..., 0.071, 0.12 , 0.058])"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.max(axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LomEe3rf_yGk",
        "outputId": "d947f890-ae8d-458c-f6db-080029c2fea0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([93. , 24. , 20. , ..., 40. , 36. , 10.9])"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(e)\n",
        "np.count_nonzero(Y==5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2KEZPznVAPnJ",
        "outputId": "0fb89aab-47d8-4cc8-f51f-85cb97252266"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "681"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(i)\n",
        "X.mean(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bTHqVd-iAe4N",
        "outputId": "baff2d66-de11-44a6-ee94-c2c29f0df1e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 8.31963727,  0.52782051,  0.27097561,  2.5388055 ,  0.08746654,\n",
              "       15.87492183, 46.46779237,  0.99674668,  3.3111132 ,  0.65814884,\n",
              "       10.42298311])"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(ii)\n",
        "m = stats.mode(Y)\n",
        "m"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u3oWIF8pAms0",
        "outputId": "4f536403-08ee-42b9-926b-44d5cf9c3eb7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ModeResult(mode=array([5.]), count=array([681]))"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(iii)\n",
        "np.std(X,axis=None)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zLAsm8U6BW4J",
        "outputId": "5a6d0c7e-a786-4502-cce1-bae2b99f8691"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "16.726533979432844"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 5(i)\n",
        "values = np.unique(Y)\n",
        "values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uz6fmT-kBh5g",
        "outputId": "7e1efdec-39aa-4461-b6dd-bc712e83bfb3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 4., 5., 6., 7., 8.])"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(Y,bins=12,alpha=0.5,histtype='bar',ec='black')\n",
        "plt.title('Distribution of the Y data')\n",
        "plt.xlabel('Quality')\n",
        "plt.ylabel('Count')\n",
        "plt.legend(['Quality','Count'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "DOvXxFwDDNkK",
        "outputId": "9a4e0c66-0298-4b6d-e561-e42ab3aa4b43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 5(ii)\n",
        "plt.hist(X,bins=5,alpha=0.5,histtype='bar',ec='black')\n",
        "plt.title('Distribution of the X data')\n",
        "plt.xlabel('Quality')\n",
        "plt.ylabel('Count')\n",
        "plt.legend(['Quality','Count'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "T0VIRt_iLWcj",
        "outputId": "1cdcf75d-9c86-43a0-9eb7-dc7ece81de11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 1,2\n",
        "#From UCI machine learning repository,the wine-quality dataset white.\n",
        "#Read the dataset in the form of a NumPy matrix and store it in a variable named XY.\n",
        "XY=np.loadtxt(\"/content/drive/MyDrive/Colab Notebooks/winequality-white.csv\",delimiter=\";\",skiprows=1)\n",
        "XY"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PIfWA-5qhwU-",
        "outputId": "e18516f2-8261-4c17-af09-bb1dc00089f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 7.  ,  0.27,  0.36, ...,  0.45,  8.8 ,  6.  ],\n",
              "       [ 6.3 ,  0.3 ,  0.34, ...,  0.49,  9.5 ,  6.  ],\n",
              "       [ 8.1 ,  0.28,  0.4 , ...,  0.44, 10.1 ,  6.  ],\n",
              "       ...,\n",
              "       [ 6.5 ,  0.24,  0.19, ...,  0.46,  9.4 ,  6.  ],\n",
              "       [ 5.5 ,  0.29,  0.3 , ...,  0.38, 12.8 ,  7.  ],\n",
              "       [ 6.  ,  0.21,  0.38, ...,  0.32, 11.8 ,  6.  ]])"
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(i)\n",
        "np.random.shuffle(X)\n",
        "XY.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nWhIe57_h3FP",
        "outputId": "ab0cc536-f9cd-4ccc-d52c-2294ad20c4ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4898, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(a)\n",
        "np.random.shuffle(X)\n",
        "Y = XY[:,-1]\n",
        "Y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2CkKJtcrh3Rk",
        "outputId": "896277ed-4d02-42b2-f60a-9ff2bae70354"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([6., 6., 6., ..., 6., 7., 6.])"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OxEAO_vKh3c8",
        "outputId": "348097ea-8dc1-4ea4-eec9-67221d423922"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4898,)"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(b)\n",
        "np.random.shuffle(X)\n",
        "X = XY[:,:-1]\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mJRLwxsUh70m",
        "outputId": "a48b259c-2ed9-4b5a-ca5c-9265b9f2fb63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 7.  ,  0.27,  0.36, ...,  3.  ,  0.45,  8.8 ],\n",
              "       [ 6.3 ,  0.3 ,  0.34, ...,  3.3 ,  0.49,  9.5 ],\n",
              "       [ 8.1 ,  0.28,  0.4 , ...,  3.26,  0.44, 10.1 ],\n",
              "       ...,\n",
              "       [ 6.5 ,  0.24,  0.19, ...,  2.99,  0.46,  9.4 ],\n",
              "       [ 5.5 ,  0.29,  0.3 , ...,  3.34,  0.38, 12.8 ],\n",
              "       [ 6.  ,  0.21,  0.38, ...,  3.26,  0.32, 11.8 ]])"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V1_mRzf3h766",
        "outputId": "ad9bfb31-e053-4c94-884b-056f8d60f932"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4898, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(c)\n",
        "np.random.shuffle(X)"
      ],
      "metadata": {
        "id": "pQXmprCwwuis"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PmW8f4khh7_0",
        "outputId": "9629e409-3b40-42d1-c117-7b35c036ad77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6.3 ,  0.19,  0.28, ...,  3.2 ,  0.64, 11.4 ],\n",
              "       [ 9.2 ,  0.27,  0.34, ...,  3.04,  0.41, 10.4 ],\n",
              "       [ 6.  ,  0.19,  0.29, ...,  3.54,  0.59, 11.1 ],\n",
              "       ...,\n",
              "       [ 6.9 ,  0.19,  0.33, ...,  3.44,  0.52, 10.8 ],\n",
              "       [ 7.8 ,  0.23,  0.28, ...,  2.96,  0.4 , 11.5 ],\n",
              "       [ 7.  ,  0.24,  0.25, ...,  3.25,  0.42, 11.4 ]])"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.transpose()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F-qt4hvOh8Fw",
        "outputId": "296dbf14-0277-4917-8a10-9c21f8698409"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 6.3 ,  9.2 ,  6.  , ...,  6.9 ,  7.8 ,  7.  ],\n",
              "       [ 0.19,  0.27,  0.19, ...,  0.19,  0.23,  0.24],\n",
              "       [ 0.28,  0.34,  0.29, ...,  0.33,  0.28,  0.25],\n",
              "       ...,\n",
              "       [ 3.2 ,  3.04,  3.54, ...,  3.44,  2.96,  3.25],\n",
              "       [ 0.64,  0.41,  0.59, ...,  0.52,  0.4 ,  0.42],\n",
              "       [11.4 , 10.4 , 11.1 , ..., 10.8 , 11.5 , 11.4 ]])"
            ]
          },
          "metadata": {},
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IQYoRFA4wi_x",
        "outputId": "e1d92513-6785-4443-8d3c-83cf73310c92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4898, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(d)\n",
        "X.min(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4C2VMmaXiHXg",
        "outputId": "51959f1b-e340-4273-a306-80ea36d735de"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3.8000e+00, 8.0000e-02, 0.0000e+00, 6.0000e-01, 9.0000e-03,\n",
              "       2.0000e+00, 9.0000e+00, 9.8711e-01, 2.7200e+00, 2.2000e-01,\n",
              "       8.0000e+00])"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.max(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "INESo40hiHbP",
        "outputId": "44e3bc85-110d-4999-d7a0-917ad0c88dfd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1.42000e+01, 1.10000e+00, 1.66000e+00, 6.58000e+01, 3.46000e-01,\n",
              "       2.89000e+02, 4.40000e+02, 1.03898e+00, 3.82000e+00, 1.08000e+00,\n",
              "       1.42000e+01])"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.min(axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "taK99c0UiHfE",
        "outputId": "46a30080-0914-4888-f02a-23ba4cac00a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.022, 0.043, 0.047, ..., 0.043, 0.042, 0.042])"
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X.max(axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CFovD0YOiUaS",
        "outputId": "17a72efc-60b2-4086-83f0-6475cf0cb74f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([158., 228., 152., ..., 149., 166., 189.])"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 3(ii)(e)\n",
        "np.count_nonzero(Y==5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9sorX-uiiUeN",
        "outputId": "5c872d08-8a14-4419-8385-f355bab4a8e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1457"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(i)\n",
        "X.mean(axis=0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pxgbBh0AiUhD",
        "outputId": "ff65f627-0d13-44b8-dbc5-4b0a7bb49747"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([6.85478767e+00, 2.78241119e-01, 3.34191507e-01, 6.39141486e+00,\n",
              "       4.57723561e-02, 3.53080849e+01, 1.38360657e+02, 9.94027376e-01,\n",
              "       3.18826664e+00, 4.89846876e-01, 1.05142670e+01])"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(ii)\n",
        "m = stats.mode(Y)\n",
        "m"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yW5ATomBiUjy",
        "outputId": "63f13600-60fa-492f-cec2-eda7d0f6707a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ModeResult(mode=array([6.]), count=array([2198]))"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 4(iii)\n",
        "np.std(X,axis=None)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VOPzkMCjiUmY",
        "outputId": "70a81ac7-9792-475b-f799-d74900962363"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "41.54494764094571"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 5(i)\n",
        "values = np.unique(Y)\n",
        "values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qXzSGMb_igPq",
        "outputId": "b26d287a-5f66-4c8a-db7a-0832a6f0fcec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3., 4., 5., 6., 7., 8., 9.])"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(Y,bins=12,alpha=0.5,histtype='bar',ec='black')\n",
        "plt.title('Distribution of the Y data')\n",
        "plt.xlabel('Quality')\n",
        "plt.ylabel('Count')\n",
        "plt.legend(['Quality','Count'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "k1uaJQDVigWx",
        "outputId": "da96fef7-1927-4de8-9c1b-49d71976f36c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Question: 5(ii)\n",
        "plt.hist(X,bins=5,alpha=0.5,histtype='bar',ec='black')\n",
        "plt.title('Distribution of the X data')\n",
        "plt.xlabel('Quality')\n",
        "plt.ylabel('Count')\n",
        "plt.legend(['Quality','Count'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "_JKgjkdiigds",
        "outputId": "fb6139b2-848f-4222-eb49-df6e0c3a5c39"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
